<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_dev.dao.StudentMapper">

	<sql id="selectSql">
		select stud_id, name, email, phone, dob from students
	</sql>
	
	<sql id="updateSql">
		Update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob}
	</sql>
	
	<sql id="insertSql">
		insert into students(stud_id, name, email, phone, dob) values (#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</sql>
	
	<sql id="deleteSql">
		delete from students
	</sql>
	
	<sql id="whereSql">
		<where>
			<if test="studId != null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>
	
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentResultExtends" extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<resultMap type="Student" id="StudentResultAssociation" extends="StudentResult">
		<association property="address" resultMap="kr.or.dgit.mybatis_dev.dao.AddressMapper.AddressResult"></association>
	</resultMap>
	
	<select id="selectStudentByNoAssociationAddress" parameterType="Student" resultMap="StudentResultAssociation">
		select STUD_ID, name, EMAIL, PHONE, DOB, a.ADDR_ID, street, city, state, zip, country
		from students s left join addresses a on s.ADDR_ID = a.ADDR_ID
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByNoWithAddress" parameterType="Student" resultMap="StudentResultExtends">
		select STUD_ID, name, EMAIL, PHONE, DOB, a.ADDR_ID, street, city, state, zip, country
		from students s left join addresses a on s.ADDR_ID = a.ADDR_ID
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByNoForResultMap" parameterType="Student" resultMap="StudentResult">
		<include refid="selectSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
		<include refid="selectSql"></include>
	</select>
	
	<!-- hashmap 으로 결과 리턴 -->
	<select id="selectStudentByNoForHashMap" parameterType="Student" resultType="map">
		<include refid="selectSql"></include>
		<include refid="whereSql"></include>
	</select>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSql"></include>
	</select>
	
	<update id="updateSetStudent" parameterType="Student">
		update students
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="email != null">email=#{email},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="dob != null">dob=#{dob},</if>
			<if test="gender != null">gender=#{gender},</if>
		</set>
		where stud_id=#{studId}
	</update>
</mapper>